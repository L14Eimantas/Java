/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package serveris;

import Labirinto_dalys.Kryptys;
import Labirinto_dalys.Labirintas;

/**
 *
 * @author Eimantas
 */
public class RedaguotiSienas extends javax.swing.JDialog {

    /**
     * Creates new form RedaguotiSienas
     */
    Labirintas l;
    boolean t=false;
    public RedaguotiSienas(java.awt.Frame parent, boolean modal, Labirintas l ) {
        super(parent, modal);
        this.l=l;
        initComponents();
        if (l!=null){
           piesinys.setL(this.l);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        piesinys = new Grafika.LabirintoRedagavimas();
        Baigti = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Redaguokite Sienas");

        piesinys.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                piesinysMouseMoved(evt);
            }
        });
        piesinys.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                piesinysMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout piesinysLayout = new javax.swing.GroupLayout(piesinys);
        piesinys.setLayout(piesinysLayout);
        piesinysLayout.setHorizontalGroup(
            piesinysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        piesinysLayout.setVerticalGroup(
            piesinysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 291, Short.MAX_VALUE)
        );

        Baigti.setText("Baigti Redagavimas");
        Baigti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BaigtiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(piesinys, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Baigti, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(piesinys, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Baigti, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BaigtiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BaigtiActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_BaigtiActionPerformed

    private void piesinysMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_piesinysMouseClicked
        // TODO add your handling code here:
            int x = evt.getX();
            int y = evt.getY();
            int mastelis = piesinys.m;
            int j = x / mastelis;
            int i = y / mastelis;
                //Langelis dabartinis = (l.getLangeliai())[i][j];
                Kryptys kr;
            //cia pasiziuri kiek nutolusi pele nuo langeliu sienu
            int ats_iki_vet_sien = x % mastelis;
            int ats_iki_hor_sien = y % mastelis;
            //atimama puse langeliu ir imamas moduli tam, kad butu aisku kiek nuo vidurio nutole, 
            //taip aiskiau atrinti ar arciau kaires ar desines ir pan
            if (Math.abs(ats_iki_vet_sien - mastelis / 2)
                    > Math.abs(ats_iki_hor_sien - mastelis / 2)) {
                //vertikali siena
                    if (ats_iki_vet_sien < mastelis / 2) {
                        kr = Kryptys.KAIRE;
                    } else {
                        kr = Kryptys.DESINE;
                    }
            } else {
                //horizontali siena
                    if (ats_iki_hor_sien < mastelis / 2) {
                        kr = Kryptys.VIRSUS;
                    } else {
                        kr = Kryptys.APACIA;
                    }
            }
            l.keistiSiena(i, j, kr);
            this.repaint();
    }//GEN-LAST:event_piesinysMouseClicked

    private void piesinysMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_piesinysMouseMoved
        // TODO add your handling code here:
                    try{
            int x = evt.getX();
            int y = evt.getY();
            int mastelis = piesinys.m;
            int j = x / mastelis;
            int i = y / mastelis;
               Kryptys kr;
            //cia pasiziuri kiek nutolusi pele nuo langeliu sienu
            int ats_iki_vet_sien = x % mastelis;
            int ats_iki_hor_sien = y % mastelis;
            //atimama puse langeliu ir imamas moduli tam, kad butu aisku kiek nuo vidurio nutole, 
            //taip aiskiau atrinti ar arciau kaires ar desines ir pan
            if (Math.abs(ats_iki_vet_sien - mastelis / 2)
                    > Math.abs(ats_iki_hor_sien - mastelis / 2)) {
                //vertikali siena
                    if (ats_iki_vet_sien < mastelis / 2) {
                        kr = Kryptys.KAIRE;
                    } else {
                        kr = Kryptys.DESINE;
                    }
            } else {
                //horizontali siena
                    if (ats_iki_hor_sien < mastelis / 2) {
                        kr = Kryptys.VIRSUS;
                    } else {
                        kr = Kryptys.APACIA;
                    }
            }
            piesinys.ll=(l.getLangeliai())[i][j];
            piesinys.kk=kr;
            this.repaint();
            }
            catch(Exception x){}
    }//GEN-LAST:event_piesinysMouseMoved

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RedaguotiSienas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RedaguotiSienas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RedaguotiSienas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RedaguotiSienas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RedaguotiSienas dialog = new RedaguotiSienas(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Baigti;
    private Grafika.LabirintoRedagavimas piesinys;
    // End of variables declaration//GEN-END:variables
}
